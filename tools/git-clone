#!/bin/bash

usage="Usage: $0 repo_url repo_destination_path tag [debian_changelog_path]"
pdir="$(dirname $(realpath $0))"

if [[ $# -lt 3 ]]; then
  (>&2 echo "Missing required argument(s). $usage")
  exit 1
fi

repo_url=$1
repo_destination_path=$2
tag=$3
tag_prefix=$(echo $tag | awk -F "/" '{print $1}')

if [[ -e "$repo_destination_path" ]]; then
  echo "$repo_destination_path already exists, skipping clone (clean sources to re-fetch)."

  (cd "$repo_destination_path" &&
    current_branch=$(git rev-parse --abbrev-ref HEAD)

  # clean up before proceeding
  if [[ "$current_branch" != "master" ]]; then
    git checkout master
    git branch -D "$current_branch"
    git reset --hard HEAD
  fi)

else
  git clone "$repo_url" "$repo_destination_path"
fi

cd "$repo_destination_path"

git tag -l | grep -q "$tag"

if [[ $? == 0 ]]; then
  echo "git tag $tag exists in local copy, building from tagged source and skipping changelog creation"
  git checkout -b "$tag-build" "tags/${tag}"
else
  echo "git tag $tag does not exist, building from HEAD and creating changelog"
  if [ ! -f $4 ]; then
    (>&2 echo "Missing required argument 'debian_changelog_path': $4. $usage")
    exit 1
  fi

  ${pdir}/gen-changelog "$PWD" "$4" "$tag_prefix" > ./.git-gen-changelog
  if [[ $? != 0 ]]; then
    (>&2 echo "Error generating git changelog")
    exit 1
  fi
fi

exit 0
