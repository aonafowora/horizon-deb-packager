#!/bin/bash -x

#
# TODO: improvements:
# 1. Make agent smarter, it should parse the horizon-pkg changelog and build+push all old versions
# 2. Improve error handling
# 3. Add version and dist to args, build up the packagesgz_url
# 4. Check for presence of package in build indexing queue on server before building; this is smarter than the current post-build sleep in place now

usage="Usage: $0 sleep_s prj_dir packagesgz_url_templ publish_destination_stub"

if [[ $# -lt 4 ]]; then
  (>&2 echo "Missing required argument(s). $usage")
  exit 1
fi

sleep_s=$1
prj_dir="$2"
packagesgz_url_templ="$3"
publish_destination_stub="$4"

VERSION=""
ARCH=""
DIST_RELEASE=""

function control_c() {
  exit 0
}

trap control_c SIGINT SIGQUIT

# depends on side effects
function clone_prj() {
  if [[ ! -d ${prj_dir}/.git ]]; then
    git clone https://github.com/open-horizon/horizon-pkg.git $prj_dir
  else
    (mkdir -p $prj_dir; cd $prj_dir && \
      git reset --hard HEAD && \
      git clean -df && \
      git pull && \
      make distclean git_repo_prefix=https://github.com/open-horizon)
  fi

  VERSION="$(cat ./VERSION)"
  ARCH="$(./tools/arch-tag)"
  DIST_RELEASE="$(cd $prj_dir && make show-packages | xargs -n1 | grep -oP "dist/.*~\K([^_]+)" | sort | uniq | xargs)"
}

# an empty return is an error
function artifact_versions() {
  url="$1"

  # single line of versions published, like this: "2.0.10b 2.0.7 2.0.9"
  pkgs=$(curl -sf "${url}" 2> /dev/null)
  if [[ $? == 22 ]]; then
    echo "-99"
  elif [[ $? > 0 ]]; then
    (>&2 echo "Failed to determine existing deb package versions.")
    echo ""
  else
    echo $pkgs | gunzip | grep -oP 'Version: \K([^~]+)' | sort | uniq | xargs
  fi
}

function build_publish() {
  dist="$1"
  rel="$2"
  versions="${@:3}"

  echo "$versions" | grep -q "$VERSION"
  if [[ $? != 0 ]]; then
    echo "$VERSION not yet indexed for our architecture ($ARCH). Building package and submitting it to queue."
    (cd $prj_dir && \
      mkdir -p bld && \
      echo "GOPATH_CACHE=/root/go/.cache" > bld/anax-rules.env && \
      make mostlyclean $(make show-packages | xargs -n1 | grep "$rel" | xargs) git_repo_prefix=https://github.com/open-horizon anax-ui-branch=build_speedup anax-branch=build_speedup verbose=y && \
      for dist in $1; do rsync -avz -f"- */" --progress --stats ${prj_dir}/dist/*${dist}* "${publish_destination_stub}/${dist}.${rel}/"; done)
  else
    echo "$newest_pkg already indexed for our architecture ($ARCH)."
  fi
}

while true; do
  sleep $sleep_s

  clone_prj

  for dr in ${DIST_RELEASE}; do
    IFS='.' read -ra draddr <<< "$dr"
    vers=$(artifact_versions $(echo "$packagesgz_url_templ" | sed "s,##DIST##,${draddr[0]},g" | sed "s,##RELEASE##,${draddr[1]},g" | sed "s,##ARCH##,${ARCH},g"))
    if [[ $vers == "" ]]; then
      # TODO: add a backoff, we had a failure getting to the service
      (>&2 echo "Failed to build, backing off.")
      sleep 10m
    else
      build_publish "${draddr[0]}" "${draddr[1]}" "$vers"
    fi
  done

  local post_build_sleep_m=35m
  echo "Pushed all packages for indexing, sleeping for ${post_build_sleep_m}m to prevent rebuilding before indexing queue is processed"
  sleep $post_build_sleep_m
done
