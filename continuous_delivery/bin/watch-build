#!/bin/bash -x

#
# TODO: improvements:
# 1. Make agent smarter, it should parse the horizon-pkg changelog and build+push all old versions
# 2. Improve error handling
# 3. Add version and dist to args, build up the packagesgz_url
# 4. Check for presence of package in build indexing queue on server before building; this is smarter than the current post-build sleep in place now

usage="Usage: $0 sleep_s prj_dir packagesgz_url horizon_pkg_version_url publish_destination_stub"

if [[ $# -lt 5 ]]; then
  (>&2 echo "Missing required argument(s). $usage")
fi

sleep_s=$1
prj_dir="$2"
packagesgz_url="$3"
horizon_pkg_version_url="$4"
publish_destination_stub="$5"

function control_c() {
  exit 0
}

trap control_c SIGINT SIGQUIT

watch_repo() {
  newest_pkg=$(curl -s "${horizon_pkg_version_url}")
  if [[ $? != 0 ]]; then
    (>&2 echo "Failed to determine horizon-pkg current version.")
    echo ""
    return
  fi

  # single line of versions published, like this: "2.0.10b 2.0.7 2.0.9"
  packages=$(curl -s "${packagesgz_url}" | gunzip | grep -oP 'Version: \K([^~]+)' | sort | uniq | xargs)
  if [[ $? != 0 ]]; then
    (>&2 echo "Failed to determine existing deb package versions.")
    echo ""
    return
  fi

  # needs to be split by consumer of this function
  echo "$newest_pkg $packages"
  return
}

build() {
  newest_pkg="$1"
  packages="${@:2}"

  echo "$packages" | grep -q "$newest_pkg"
  if [[ $? != 0 ]]; then
    echo "$newest_pkg not yet indexed for our architecture (determined by examining $packagesgz_url). Building package and submitting it to queue."
    (cd $prj_dir && \
      make distclean git_repo_prefix=https://github.com/open-horizon anax-ui-branch=build_speedup anax-branch=build_speedup && \
      git reset --hard HEAD && \
      git clean -df && \
      git pull && \
      mkdir bld && \
      echo "GOPATH_CACHE=/root/go/.cache" > bld/anax-rules.env && \
      make packages git_repo_prefix=https://github.com/open-horizon anax-ui-branch=build_speedup anax-branch=build_speedup verbose=y && \
      for dist in $(make show-distribution-names); do rsync -avz -f"- */" --progress --stats "${prj_dir}/dist/*${dist}*" "${publish_destination_stub}${dist}"; done)

    local post_build_sleep_s=5
    echo "Pushed all packages for indexing, sleeping for ${post_build_sleep_s}s to prevent rebuilding before indexing queue is processed"
    sleep $post_build_sleep_s
  else
    echo "$newest_pkg already indexed for our architecture (determined by examining $packagesgz_url)."
  fi
}

while true; do
  sleep $sleep_s

  vers=$(watch_repo)
  if [[ "$vers" != "" ]]; then
    build "$vers"
  fi
done
